# Fastfile Template for Flutter Projects
# This is the template Fastfile that imports shared lanes from App-Auto-Deployment-kit

# Minimum fastlane version
fastlane_version "2.210.1"

# Default platform
default_platform(:ios)

# Import shared lanes from deployment kit
import_from_git(
  url: "https://github.com/sangnguyen-it/App-Auto-Deployment-kit",
  branch: "main",
  path: "fastlane/lanes"
)

# iOS Platform
platform :ios do
  
  desc "Deploy iOS app to TestFlight"
  lane :beta do
    ios_beta_deploy
  end

  desc "Deploy iOS app to App Store"
  lane :release do
    ios_release_deploy
  end
  
  desc "Build iOS app locally for testing"
  lane :build do
    setup_shared_environment
    setup_ios_signing('appstore')
    build_ios_app('app-store')
  end
  
  desc "Setup iOS development environment"
  lane :setup do
    validate_ios_environment
    puts "‚úÖ iOS environment setup completed"
  end
  
end

# Android Platform
platform :android do
  
  desc "Deploy Android app to Play Store Internal Testing"
  lane :beta do
    android_beta_deploy
  end

  desc "Deploy Android app to Play Store Production"
  lane :release do |options|
    rollout = options[:rollout] || ENV['ROLLOUT_PERCENTAGE'] || 100
    android_release_deploy(nil, rollout)
  end
  
  desc "Build Android app locally for testing"
  lane :build do |options|
    setup_shared_environment
    setup_android_signing
    build_type = options[:type] || 'appbundle'
    build_android_app(build_type)
  end
  
  desc "Setup Android development environment"
  lane :setup do
    validate_android_environment
    puts "‚úÖ Android environment setup completed"
  end
  
  desc "Promote release from internal to beta"
  lane :promote_to_beta do
    promote_android_release('internal', 'beta')
  end
  
  desc "Promote release from beta to production"
  lane :promote_to_production do |options|
    rollout = options[:rollout] || ENV['ROLLOUT_PERCENTAGE'] || 100
    promote_android_release('beta', 'production', rollout)
  end
  
end

# Cross-platform lanes
desc "Deploy both iOS and Android beta versions"
lane :beta_all do
  ios_beta_deploy
  android_beta_deploy
  
  send_notification("üöÄ Both iOS and Android beta versions deployed successfully!", true)
end

desc "Deploy both iOS and Android production versions"
lane :release_all do |options|
  rollout = options[:rollout] || ENV['ROLLOUT_PERCENTAGE'] || 100
  
  ios_release_deploy
  android_release_deploy(nil, rollout)
  
  send_notification("üéâ Both iOS and Android production versions deployed successfully!", true)
end

desc "Setup development environment for both platforms"
lane :setup_all do
  validate_environment
  validate_ios_environment
  validate_android_environment
  
  puts "‚úÖ All environments setup completed"
end

desc "Clean all build artifacts"
lane :clean_all do
  cleanup_artifacts
  clean_android_build if Dir.exist?('../android')
  
  puts "‚úÖ All artifacts cleaned"
end

# Error handling
error do |lane, exception|
  # Send error notification
  send_notification("‚ùå Lane #{lane} failed: #{exception.message}", false)
  
  # Clean up sensitive files
  sh "rm -f ../key.properties" rescue nil
  sh "rm -f ./play_store_service_account.json" rescue nil
  sh "rm -f /tmp/dist_cert.p12" rescue nil
  sh "rm -f /tmp/profile.mobileprovision" rescue nil
end

